<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reference extends \App\Entities\Reference implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'referenceType', 'author', 'created', 'publicationYear', 'title', 'shortTitle', 'parent', 'edition', 'volume', 'issue', 'number', 'pageStart', 'pageEnd', 'pages', 'numberOfPages', 'publisher', 'placeOfPublication', 'shortDescription', 'abstract', 'isbn', 'issn', 'doi', 'citation', 'citationHtml', 'url', 'id', 'version', 'createdBy', 'modifiedBy', 'timestampCreated', 'timestampModified'];
        }

        return ['__isInitialized__', 'referenceType', 'author', 'created', 'publicationYear', 'title', 'shortTitle', 'parent', 'edition', 'volume', 'issue', 'number', 'pageStart', 'pageEnd', 'pages', 'numberOfPages', 'publisher', 'placeOfPublication', 'shortDescription', 'abstract', 'isbn', 'issn', 'doi', 'citation', 'citationHtml', 'url', 'id', 'version', 'createdBy', 'modifiedBy', 'timestampCreated', 'timestampModified'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reference $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getReferenceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReferenceType', []);

        return parent::getReferenceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setReferenceType(\App\Entities\ReferenceType $referenceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReferenceType', [$referenceType]);

        return parent::setReferenceType($referenceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', []);

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', [$author]);

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getCitation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCitation', []);

        return parent::getCitation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCitation($citation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCitation', [$citation]);

        return parent::setCitation($citation);
    }

    /**
     * {@inheritDoc}
     */
    public function getCitationHtml()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCitationHtml', []);

        return parent::getCitationHtml();
    }

    /**
     * {@inheritDoc}
     */
    public function setCitationHtml($citationHtml)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCitationHtml', [$citationHtml]);

        return parent::setCitationHtml($citationHtml);
    }

    /**
     * {@inheritDoc}
     */
    public function setContributorsCache($str)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContributorsCache', [$str]);

        return parent::setContributorsCache($str);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicationYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicationYear', []);

        return parent::getPublicationYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicationYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicationYear', [$year]);

        return parent::setPublicationYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortTitle', []);

        return parent::getShortTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortTitle($shortTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortTitle', [$shortTitle]);

        return parent::setShortTitle($shortTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getEdition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEdition', []);

        return parent::getEdition();
    }

    /**
     * {@inheritDoc}
     */
    public function setEdition($edition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEdition', [$edition]);

        return parent::setEdition($edition);
    }

    /**
     * {@inheritDoc}
     */
    public function getVolume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVolume', []);

        return parent::getVolume();
    }

    /**
     * {@inheritDoc}
     */
    public function setVolume($volume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVolume', [$volume]);

        return parent::setVolume($volume);
    }

    /**
     * {@inheritDoc}
     */
    public function getIssue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIssue', []);

        return parent::getIssue();
    }

    /**
     * {@inheritDoc}
     */
    public function setIssue($issue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIssue', [$issue]);

        return parent::setIssue($issue);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumber', []);

        return parent::getNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumber($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumber', [$number]);

        return parent::setNumber($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageStart', []);

        return parent::getPageStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageStart($page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageStart', [$page]);

        return parent::setPageStart($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageEnd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageEnd', []);

        return parent::getPageEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageEnd($page)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageEnd', [$page]);

        return parent::setPageEnd($page);
    }

    /**
     * {@inheritDoc}
     */
    public function getPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPages', []);

        return parent::getPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setPages($pages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPages', [$pages]);

        return parent::setPages($pages);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOfPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOfPages', []);

        return parent::getNumberOfPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOfPages($number)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOfPages', [$number]);

        return parent::setNumberOfPages($number);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisher()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisher', []);

        return parent::getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublisher($publisher)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublisher', [$publisher]);

        return parent::setPublisher($publisher);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlaceOfPublication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaceOfPublication', []);

        return parent::getPlaceOfPublication();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlaceOfPublication($place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlaceOfPublication', [$place]);

        return parent::setPlaceOfPublication($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', []);

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortDescription', [$description]);

        return parent::setShortDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbstract()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbstract', []);

        return parent::getAbstract();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbstract($abstract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbstract', [$abstract]);

        return parent::setAbstract($abstract);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', []);

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn($isbn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', [$isbn]);

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getIssn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIssn', []);

        return parent::getIssn();
    }

    /**
     * {@inheritDoc}
     */
    public function setIssn($issn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIssn', [$issn]);

        return parent::setIssn($issn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDoi()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDoi', []);

        return parent::getDoi();
    }

    /**
     * {@inheritDoc}
     */
    public function setDoi($doi)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDoi', [$doi]);

        return parent::setDoi($doi);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', []);

        return parent::setVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function incrementVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'incrementVersion', []);

        return parent::incrementVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getGuid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuid', []);

        return parent::getGuid();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuid', []);

        return parent::setGuid();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', []);

        return parent::setCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', []);

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', []);

        return parent::setModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimestampCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimestampCreated', []);

        return parent::getTimestampCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimestampCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimestampCreated', []);

        return parent::setTimestampCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimestampModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimestampModified', []);

        return parent::getTimestampModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimestampModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimestampModified', []);

        return parent::setTimestampModified();
    }

}
